MODE D'EMPLOI
=============

Prérequis
---------

Système supporté Ubuntu 12.04.4 LTS

Installation du driver
----------------------

# insmod dewb

Création d'un nouveau volume
----------------------------

Afin de créer un volume, il suffit de donner la resource REST à créer au driver,
accompagnée d'une taille en octets, comme l'exemple qui suit:
# echo "http://<ip>[:port]/<path_and_filename> filesize_in_bytes" > /sys/class/dewb/create

Le volume sera alors créé sur le stockage, avec la taille demandée.
Attention cependant :
* Créer un volume ne l'ajoute pas automatiquement dans les devices dewblock
* Le chemin vers le volume que l'on crée doit exister. Le driver ne crée pas le chemin automatiquement.

Il est maintenant possible d'ajouter ce volume en tant que device (voir plus bas).

Destruction d'un volume existant
--------------------------------

Détruire un volume signifie que ce volume ne sera plus accessible après opération.
Afin de détruire un volume, il faut donner au driver la resource REST à supprimer du stockage
comme l'exemple suivant l'indique:
# echo "http://<ip>[:port]/<path_and_filename>" > /sys/class/dewb/destroy

Le volume est alors supprimé du stockage et n'est plus accessible.
Attention cependant :
* LE volume à détruire doit exister au préalable
* Détruire un volume utilisé par d'autres drivers dewblock sur d'autres machines
peut mener à des erreurs et un comportement innatendus et non-testés.

Ajout d'un nouveau device
-------------------------

Il suffit ensuite de créer un block driver pointant dessus comme suit:
# echo "http://<ip>[:port]/<path_and_filename>" > /sys/class/dewb/add

Une entreée dans /dev est créé:
* /dev/dewba pour le 1er ajout
* /dev/dewbb pour le 2e
Et ainsi de suite ...

Suppression d'un device
-----------------------

Un device créé à l'étape précédente peut être supprimé par la commande
suivante: 
# echo "device" > /sys/class/dewb/remove
device peut être par exemple dewba, dewbb, dewbc ...

Partitionnement d'un device
---------------------------

Les devices peuvent être partitionnés comme des disques classiques,
par exemple:

# fdisk /dev/dewb

Une fois partitionné, les fichiers associés dans /dev sont créés par ex
* /dev/dewba1
* /dev/dewba2
Et ainsi de suite ...

Interface sysfs
---------------

Pour chaque device, une entrée est créée dans /sys/block
* /sys/block/dewba pour le device dewba
* /sys/block/dewbb pour le device dewbb
Et ainsi de suite


Traces de debug
---------------

Il est possible d'activer/désactiver les traces de debug avec la commande suivante:

Activer:
# echo 1 > /sys/block/dewb?/dewb_debug
Désactiver:
# echo 0 > /sys/block/dewb?/dewb_debug

Lire les informations relatives au device
-----------------------------------------

L'URL CDMI associée:
# cat /sys/block/dewb?/dewb_urls
La taille du disque:
# cat /sys/block/dewb?/dewb_size

Reste à faire:

* Tolérance aux pannes quand plus de serveur (reset ou timeout).
* Optimiser la taille des secteurs.
* Mettre le device en non rotational
* Support de DKMS
* Rollback si pas de connexions 
